<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="#stylesheet"?>
<!DOCTYPE xml [<!ATTLIST xsl:stylesheet id ID #REQUIRED>]>
<KB>
	<xsl:stylesheet id="stylesheet" version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
		<xsl:output method="html" encoding="UTF-8"/>

		<xsl:template match="*">
			<xsl:copy-of select="."/>
		</xsl:template>

		<xsl:template match="KB-Transclude">
			<xsl:variable name="Prefix" select="/KB/KB-Data/KB-Files/KB-File"/>
			<xsl:variable name="Name" select="@Name"/>
			<div>
				<xsl:copy-of select="$Prefix[KB-Name=string($Name)]/KB-Content"/>
				<xsl:apply-templates select="$Prefix[KB-Name=string($Name)]/KB-Content/KB-Transclude"/>
			</div>
		</xsl:template>

		<xsl:template match="/KB">
			<html>
				<head>
					<style>
						div.KB-File { border: 2px solid gray; padding: 8px; margin: 16px; }
						#Console { width: 100%; height: 16em; }
					</style>
					<script id="KB-Data">
						/*
							<xsl:copy-of select="/KB/KB-Data"/>
						*/
					</script>
				</head>
				<body>
					<textarea id="Console"></textarea>
					<button onclick="alert(NewArticle(););">New</button>
					<!-- Note: Try catch here breaks XML wtf -->
					<!-- <button onclick="alert(eval('try{'+Console.value+'}catch(e){alert(e)}'));">Eval</button> -->
					<button onclick="alert(_eval(Console.value));">Eval</button>
					<xsl:for-each select="KB-Data/KB-Files/KB-File">
						<div class="KB-File">
							<button>Edit</button>
							<button>Close</button>
							<h2><xsl:value-of select="KB-Name"/></h2>
							<div>
								<xsl:apply-templates select="KB-Content/*"/>
							</div>
						</div>
					</xsl:for-each>
					<script>
const _eval = Str => {
	try { return eval(Str); }
	catch(e) { return e; };
};

// https://stackoverflow.com/a/52273870
function DownloadFile(Data, Name) {
	// IE11 support
	if (window.navigator &amp;&amp; window.navigator.msSaveOrOpenBlob) {
		var blob = new Blob([Data], {type: "application/octet-stream"});
		window.navigator.msSaveOrOpenBlob(blob, Name);
	} else { // other browsers
		let file = new File([Data], Name, {type: "application/octet-stream"});
		let exportUrl = URL.createObjectURL(file);
		window.location.assign(exportUrl);
		URL.revokeObjectURL(exportUrl);
	};
};

const GetData = _ => {
	var KBData = document.getElementById('KB-Data').outerHTML;
	KBData = KBData.substring(
		KBData.indexOf('/*') + 2,
		KBData.indexOf('*/')
	);
	//const Parse = new DOMParser();
	//KBData = Parse.parseFromString(KBData, 'text/xml');
	return KBData;
};

const NewArticle = function NewArticle() {
	const Parse = new DOMParser();
	return Parse.parseFromString('<Test>Test</Test>', 'text/xml');
};

/*alert(1);*/
					</script>
				</body>
			</html>
		</xsl:template>
	</xsl:stylesheet>
	<KB-Data>
		<KB-Files>

			<KB-File>
				<KB-Name>Test</KB-Name>
				<KB-Content>
					<span style="color: red;">Testing the test - <a href="Test">Test</a> </span><a href="Test">Test</a>
					<KB-Transclude Name="Altro"/>
				</KB-Content>
				<KB-Content-Type>text/html</KB-Content-Type>
			</KB-File>

			<KB-File>
				<KB-Name>Altro</KB-Name>
				<KB-Content>
					<div>Testo sotto</div>
					<KB-Transclude Name="3"/>
				</KB-Content>
				<KB-Content-Type>text/plain</KB-Content-Type>
			</KB-File>

			<KB-File>
				<KB-Name>3</KB-Name>
				<KB-Content>
					<div>Test 3</div>
					<KB-Transclude Name="4"/>
				</KB-Content>
				<KB-Content-Type>text/html</KB-Content-Type>
			</KB-File>

			<KB-File>
				<KB-Name>4</KB-Name>
				<KB-Content><div>4 Test</div></KB-Content>
				<KB-Content-Type>text/kbml</KB-Content-Type>
			</KB-File>

		</KB-Files>
	</KB-Data>
</KB>
